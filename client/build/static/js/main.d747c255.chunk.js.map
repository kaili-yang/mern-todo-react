{"version":3,"sources":["components/navbar.js","components/taskBoard.js","App.js","index.js"],"names":["Navbar","_jsxs","children","_jsx","class","Typography","variant","component","gutterBottom","className","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","concat","alpha","primary","main","borderColor","InputBase","useStyles","makeStyles","display","flexWrap","margin","TaskList","_useState","useState","_useState2","_slicedToArray","setTaskList","_useState3","_useState4","todoList","setTodoList","_useState5","_useState6","doneList","setDoneList","_useState7","_useState8","newTodo","setNewTodo","_useState9","_useState10","searchTodo","setsearchTodo","_React$useState","React","_React$useState2","open","setOpen","_useState11","_useState12","_useState13","Array","length","fill","_useState14","todoCheckedState","setTodoCheckedState","_useState15","_useState16","doneCheckedState","classes","inputRef","useRef","useEffect","getTasks","fetch","then","response","json","data","handleTaskList","todoFilter","filter","item","status","sort","a","b","content","localeCompare","doneFilter","slice","handleCheckboxChange","tag","updatedCheckedState","map","index","params","_objectSpread","requestOptions","method","headers","body","JSON","stringify","todoData","handleAddTodoClick","inputValue","trim","newTodoObj","description","handleSearchTodoClick","handleClose","Button","color","startIcon","DeleteIcon","onClick","Grid","container","xs","value","onChange","e","target","ref","onKeyDown","event","key","preventDefault","defaultValue","id","onKeyUp","type","checked","_id","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","App","Fragment","CssBaseline","Container","maxWidth","Routes","Route","exact","path","element","TaskBoard","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d747c255.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport './navbar.css';\n\nexport default function Navbar() {\n  return (\n    <div>\n      <div class=\"title\">\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom >\n            Task Board\n          </Typography>\n      </div>\n      <p className=\"subtitle\">@Kaili's Interview</p>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {\n  alpha,\n  withStyles,\n} from '@material-ui/core/styles';\nimport '../index.css'\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function TaskList() {\n  const [taskList, setTaskList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [searchTodo, setsearchTodo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoCheckedState, setTodoCheckedState] = useState(\n    new Array(todoList.length).fill(false)\n  );\n  const [doneCheckedState, setDoneCheckedState] = useState(\n    new Array(doneList.length).fill(false)\n  );\n  const classes = useStyles();\n  const inputRef = useRef(null);\n\n  // This method fetches the tasks from the database.\n  useEffect(() => {\n    getTasks()\n  }, []);\n\n  const getTasks = () => {\n    fetch('http://localhost:5000/api/task')\n      .then(response => response.json())\n      .then(data => {\n        handleTaskList(data.data)\n      });\n  }\n\n  const handleTaskList = (data) => {\n    if ( data == null || data.length === 0) {\n      setTaskList([]);\n      setTodoList([]);\n      setDoneList([]);\n      return\n    } \n    setTaskList(data);\n    const todoFilter = data.filter(item => item.status === 0)\n    if (!todoFilter || todoFilter.length === 0) {\n      setTodoList([]);\n    } else {\n      setTodoList(todoFilter.sort((a, b) => a.content.localeCompare(b.content)))\n    }\n    const doneFilter = data.filter(item => item.status === 1)\n    if (!doneFilter || doneFilter.length === 0) {\n      setDoneList([]);\n    } else {\n      setDoneList(doneFilter.sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n    }\n  }\n\n  const handleCheckboxChange = (position, item, tag) => {\n    if (tag === 'todo') {\n      const updatedCheckedState = todoCheckedState.map((item, index) =>\n        index === position ? !item : item\n      );\n      setTodoCheckedState(updatedCheckedState);\n    } \n    const params = { ...item, status: item.status === 0 ? 1 : 0 };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(params)\n    };\n    fetch(`http://localhost:5000/api/task/update`, requestOptions)\n      .then(response => response.json())\n      .then(todoData => {\n        getTasks();\n      });\n  };\n\n  const handleAddTodoClick = () => {\n    let inputValue = newTodo.trim();\n    if(inputValue.length === 0) return\n    const newTodoObj = { content: inputValue, status: 0, description: \"\" };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newTodoObj)\n    };\n    fetch('http://localhost:5000/api/task/add', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        getTasks()\n        setNewTodo('')\n      });\n  }\n  const handleSearchTodoClick = () => {\n    // if(searchTodo.length === 0) return\n    const requestOptions = {\n      method: 'GET',\n    };\n    fetch(`http://localhost:5000/api/task?content=${searchTodo}`, requestOptions)\n      .then(response => response.json()).then(todoData => {\n        handleTaskList(todoData.data)\n      });\n  }\n  \n  const handlClick = (e) => {\n    setNewTodo(e.target.value);\n  }\n\n  const searchClick = (e) => {\n    setsearchTodo(e.target.value);\n  }\n\n  const handleDeleteAll = () => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://localhost:5000/api/task/delete', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        handleClose()\n        getTasks()\n      });\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleAddTodoClick();\n    }\n  };\n\n  const handleKeyDownDelete = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleSearchTodoClick();\n    }\n  };\n\n\n  \n  return (\n    <div>\n      <div className=\"delete-box\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={handleClickOpen}\n          className=\"right\"\n        >\n          Delete All\n        </Button>\n      </div>\n \n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={classes.margin}>\n            <BootstrapInput value={newTodo} onChange={handlClick} ref={inputRef} onKeyDown={handleKeyDown} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n            <span className=\"btn\">\n              <Button onClick={handleAddTodoClick} variant=\"contained\" color=\"primary\">Create</Button>\n              </span>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={classes.margin}>\n            <BootstrapInput value={searchTodo} onChange={searchClick} ref={inputRef} onKeyDown={handleKeyDownDelete} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n            <span className=\"btn\"><Button onClick={handleSearchTodoClick} onKeyUp={handleSearchTodoClick}  variant=\"contained\" color=\"primary\" >Search</Button></span>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <h2>Todo</h2>\n            {todoList.map((item, index) => (\n              <div key={item._id}>\n                {todoCheckedState}\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"`todo-${index}`\"\n                    value=\"{item.content}\"\n                    checked={todoCheckedState[index]}\n                    onChange={() => handleCheckboxChange(index, item, 'todo')}\n                  />\n                  {item.content}\n                </label>\n              </div>\n            ))}\n        </Grid>\n        <Grid item xs={6}>\n          <h2>Done</h2>\n          {doneList.map((item, index) => (\n            <div key={item._id}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={doneCheckedState[index]}\n                  onChange={() => handleCheckboxChange(index, item, 'done')}\n                />\n                {item.content}\n              </label>\n            </div>\n          ))}\n        </Grid>\n      </Grid>\n      \n\n      \n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will delete all the tasks.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleDeleteAll} color=\"primary\" autoFocus>\n            Delete All\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport TaskBoard from \"./components/taskBoard\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className=\"wrapper\">\n        <Container maxWidth=\"lg\" component=\"div\">\n          <Navbar/>\n          <Routes>\n            <Route exact path=\"/\" element={<TaskBoard />} />\n          </Routes>\n        </Container>\n      </div>\n    </React.Fragment>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}