{"ast":null,"code":"var _jsxFileName = \"/Users/yangkaili/Documents/hatch-mongodb/webpack-problem-mern-todo/client/src/components/taskBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { alpha, withStyles } from '@material-ui/core/styles';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function TaskList() {\n  _s();\n  const [taskList, setTaskList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [searchTodo, setsearchTodo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoCheckedState, setTodoCheckedState] = useState(new Array(todoList.length).fill(false));\n  const [doneCheckedState, setDoneCheckedState] = useState(new Array(doneList.length).fill(false));\n  const classes = useStyles();\n  const inputRef = useRef(null);\n\n  // This method fetches the tasks from the database.\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const getTasks = () => {\n    fetch('http://localhost:5000/api/task').then(response => response.json()).then(data => {\n      handleTaskList(data.data);\n    });\n  };\n  const handleTaskList = data => {\n    if (data == null || data.length === 0) {\n      setTaskList([]);\n      setTodoList([]);\n      setDoneList([]);\n      return;\n    }\n    setTaskList(data);\n    const todoFilter = data.filter(item => item.status === 0);\n    if (!todoFilter || todoFilter.length === 0) {\n      setTodoList([]);\n    } else {\n      setTodoList(todoFilter.sort((a, b) => a.content.localeCompare(b.content)));\n    }\n    const doneFilter = data.filter(item => item.status === 1);\n    if (!doneFilter || doneFilter.length === 0) {\n      setDoneList([]);\n    } else {\n      setDoneList(doneFilter.sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n    }\n  };\n  const handleCheckboxChange = (position, item, tag) => {\n    if (tag === 'todo') {\n      const updatedCheckedState = todoCheckedState.map((item, index) => index === position ? !item : item);\n      setTodoCheckedState(updatedCheckedState);\n    }\n    const params = {\n      ...item,\n      status: item.status === 0 ? 1 : 0\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    };\n    fetch(`http://localhost:5000/api/task/update`, requestOptions).then(response => response.json()).then(todoData => {\n      getTasks();\n    });\n  };\n  const handleAddTodoClick = () => {\n    const newTodo = newTodo.trim();\n    if (newTodo.length === 0) return;\n    const newTodoObj = {\n      content: newTodo,\n      status: 0,\n      description: \"\"\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTodoObj)\n    };\n    fetch('http://localhost:5000/api/task/add', requestOptions).then(response => response.json()).then(todoData => {\n      getTasks();\n      setNewTodo('');\n    });\n  };\n  const handleSearchTodoClick = () => {\n    // if(searchTodo.length === 0) return\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch(`http://localhost:5000/api/task?content=${searchTodo}`, requestOptions).then(response => response.json()).then(todoData => {\n      handleTaskList(todoData.data);\n    });\n  };\n  const handleClearInput = () => {\n    setNewTodo(\"\");\n  };\n  const handleInputChange = event => {\n    setNewTodo(event.target.value);\n  };\n  const handlClick = e => {\n    setNewTodo(e.target.value);\n  };\n  const searchClick = e => {\n    setsearchTodo(e.target.value);\n  };\n  const handleDeleteAll = () => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:5000/api/task/delete', requestOptions).then(response => response.json()).then(todoData => {\n      handleClose();\n      getTasks();\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleAddTodoClick();\n      setNewTodo('');\n    }\n  };\n  const handleKeyDownDelete = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleSearchTodoClick();\n      setsearchTodo('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-box\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 22\n        }, this),\n        onClick: handleClickOpen,\n        className: \"right\",\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.margin,\n          children: [/*#__PURE__*/_jsxDEV(BootstrapInput, {\n            value: newTodo,\n            onChange: handlClick,\n            ref: inputRef,\n            onKeyDown: handleKeyDown,\n            defaultValue: \"Add new Task\",\n            id: \"bootstrap-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"clearable-input\",\n            value: newTodo,\n            onChange: handleInputChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: newTodo && /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleClearInput,\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddTodoClick,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.margin,\n          children: [/*#__PURE__*/_jsxDEV(BootstrapInput, {\n            value: searchTodo,\n            onChange: searchClick,\n            ref: inputRef,\n            onKeyDown: handleKeyDownDelete,\n            defaultValue: \"Add new Task\",\n            id: \"bootstrap-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSearchTodoClick,\n              onKeyUp: handleSearchTodoClick,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), todoList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [todoCheckedState, /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"`todo-${index}`\",\n              value: \"{item.content}\",\n              checked: todoCheckedState[index],\n              onChange: () => handleCheckboxChange(index, item, 'todo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), item.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), doneList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: doneCheckedState[index],\n              onChange: () => handleCheckboxChange(index, item, 'done')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), item.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Are you sure?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"This will delete all the tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteAll,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"lTmgvVpB/ZmE81Z6N17xHyFkSlw=\", false, function () {\n  return [useStyles];\n});\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","makeStyles","DeleteIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputBase","Grid","InputAdornment","IconButton","TextField","ClearIcon","alpha","withStyles","jsxDEV","_jsxDEV","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","borderColor","useStyles","display","flexWrap","margin","TaskList","_s","taskList","setTaskList","todoList","setTodoList","doneList","setDoneList","newTodo","setNewTodo","searchTodo","setsearchTodo","open","setOpen","inputValue","setInputValue","todoCheckedState","setTodoCheckedState","Array","length","fill","doneCheckedState","setDoneCheckedState","classes","inputRef","getTasks","fetch","then","response","json","data","handleTaskList","todoFilter","filter","item","status","sort","a","b","content","localeCompare","doneFilter","slice","handleCheckboxChange","tag","updatedCheckedState","map","index","params","requestOptions","method","headers","body","JSON","stringify","todoData","handleAddTodoClick","trim","newTodoObj","description","handleSearchTodoClick","handleClearInput","handleInputChange","event","target","value","handlClick","e","searchClick","handleDeleteAll","handleClose","handleClickOpen","handleKeyDown","key","preventDefault","handleKeyDownDelete","children","className","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","container","xs","onChange","ref","onKeyDown","defaultValue","id","InputProps","endAdornment","onKeyUp","type","checked","_id","onClose","autoFocus","_c","$RefreshReg$"],"sources":["/Users/yangkaili/Documents/hatch-mongodb/webpack-problem-mern-todo/client/src/components/taskBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {\n  alpha,\n  withStyles,\n} from '@material-ui/core/styles';\nimport '../index.css'\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function TaskList() {\n  const [taskList, setTaskList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [searchTodo, setsearchTodo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoCheckedState, setTodoCheckedState] = useState(\n    new Array(todoList.length).fill(false)\n  );\n  const [doneCheckedState, setDoneCheckedState] = useState(\n    new Array(doneList.length).fill(false)\n  );\n  const classes = useStyles();\n  const inputRef = useRef(null);\n\n  // This method fetches the tasks from the database.\n  useEffect(() => {\n    getTasks()\n  }, []);\n\n  const getTasks = () => {\n    fetch('http://localhost:5000/api/task')\n      .then(response => response.json())\n      .then(data => {\n        handleTaskList(data.data)\n      });\n  }\n\n  const handleTaskList = (data) => {\n    if ( data == null || data.length === 0) {\n      setTaskList([]);\n      setTodoList([]);\n      setDoneList([]);\n      return\n    } \n    setTaskList(data);\n    const todoFilter = data.filter(item => item.status === 0)\n    if (!todoFilter || todoFilter.length === 0) {\n      setTodoList([]);\n    } else {\n      setTodoList(todoFilter.sort((a, b) => a.content.localeCompare(b.content)))\n    }\n    const doneFilter = data.filter(item => item.status === 1)\n    if (!doneFilter || doneFilter.length === 0) {\n      setDoneList([]);\n    } else {\n      setDoneList(doneFilter.sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n    }\n  }\n\n  const handleCheckboxChange = (position, item, tag) => {\n    if (tag === 'todo') {\n      const updatedCheckedState = todoCheckedState.map((item, index) =>\n        index === position ? !item : item\n      );\n      setTodoCheckedState(updatedCheckedState);\n    } \n    const params = { ...item, status: item.status === 0 ? 1 : 0 };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(params)\n    };\n    fetch(`http://localhost:5000/api/task/update`, requestOptions)\n      .then(response => response.json())\n      .then(todoData => {\n        getTasks();\n      });\n  };\n\n  const handleAddTodoClick = () => {\n    const newTodo = newTodo.trim();\n    if(newTodo.length === 0) return\n    const newTodoObj = { content: newTodo, status: 0, description: \"\" };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newTodoObj)\n    };\n    fetch('http://localhost:5000/api/task/add', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        getTasks()\n        setNewTodo('')\n      });\n  }\n  const handleSearchTodoClick = () => {\n    // if(searchTodo.length === 0) return\n    const requestOptions = {\n      method: 'GET',\n    };\n    fetch(`http://localhost:5000/api/task?content=${searchTodo}`, requestOptions)\n      .then(response => response.json()).then(todoData => {\n        handleTaskList(todoData.data)\n      });\n  }\n  const handleClearInput = () => {\n    setNewTodo(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    setNewTodo(event.target.value);\n  };\n\n  const handlClick = (e) => {\n    setNewTodo(e.target.value);\n  }\n\n  const searchClick = (e) => {\n    setsearchTodo(e.target.value);\n  }\n\n  const handleDeleteAll = () => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://localhost:5000/api/task/delete', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        handleClose()\n        getTasks()\n      });\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleAddTodoClick();\n      setNewTodo('')\n    }\n  };\n\n  const handleKeyDownDelete = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault(); // Prevents the form from submitting\n      handleSearchTodoClick();\n      setsearchTodo('')\n    }\n  };\n\n\n  \n  return (\n    <div>\n      <div className=\"delete-box\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={handleClickOpen}\n          className=\"right\"\n        >\n          Delete All\n        </Button>\n      </div>\n \n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={classes.margin}>\n            <BootstrapInput value={newTodo} onChange={handlClick} ref={inputRef} onKeyDown={handleKeyDown} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n\n            <TextField\n                id=\"clearable-input\"\n                value={newTodo}\n                onChange={handleInputChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      {newTodo && (\n                        <IconButton onClick={handleClearInput}>\n                          <ClearIcon />\n                        </IconButton>\n                      )}\n                    </InputAdornment>\n                  )\n                }}\n              />\n\n\n            <span className=\"btn\">\n              <Button onClick={handleAddTodoClick} variant=\"contained\" color=\"primary\">Create</Button>\n              </span>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={classes.margin}>\n            <BootstrapInput value={searchTodo} onChange={searchClick} ref={inputRef} onKeyDown={handleKeyDownDelete} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n            <span className=\"btn\"><Button onClick={handleSearchTodoClick} onKeyUp={handleSearchTodoClick}  variant=\"contained\" color=\"primary\" >Search</Button></span>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <h2>Todo</h2>\n            {todoList.map((item, index) => (\n              <div key={item._id}>\n                {todoCheckedState}\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"`todo-${index}`\"\n                    value=\"{item.content}\"\n                    checked={todoCheckedState[index]}\n                    onChange={() => handleCheckboxChange(index, item, 'todo')}\n                  />\n                  {item.content}\n                </label>\n              </div>\n            ))}\n        </Grid>\n        <Grid item xs={6}>\n          <h2>Done</h2>\n          {doneList.map((item, index) => (\n            <div key={item._id}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={doneCheckedState[index]}\n                  onChange={() => handleCheckboxChange(index, item, 'done')}\n                />\n                {item.content}\n              </label>\n            </div>\n          ))}\n        </Grid>\n      </Grid>\n      \n\n      \n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will delete all the tasks.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleDeleteAll} color=\"primary\" autoFocus>\n            Delete All\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}