{"ast":null,"code":"var _jsxFileName = \"/Users/yangkaili/Documents/hatch-mongodb/mern-todo/client/src/components/taskBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function TaskList() {\n  _s();\n  const [taskList, setTaskList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [searchTodo, setsearchTodo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [todoCheckedState, setTodoCheckedState] = useState(new Array(todoList.length).fill(false));\n  const [doneCheckedState, setDoneCheckedState] = useState(new Array(doneList.length).fill(false));\n  const classes = useStyles();\n\n  // This method fetches the tasks from the database.\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const getTasks = () => {\n    fetch('http://localhost:5000/api/task').then(response => response.json()).then(data => {\n      if (!data.data || data.data.length === 0) {\n        setTaskList([]);\n        setTodoList([]);\n        setDoneList([]);\n      } else {\n        setTaskList(data.data);\n        setTodoList(data.data.filter(item => item.status === 0).sort((a, b) => a.content.localeCompare(b.content)));\n        setDoneList(data.data.filter(item => item.status === 1).sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n      }\n    });\n  };\n  const handleCheckboxChange = (position, item, tag) => {\n    if (tag === 'todo') {\n      const updatedCheckedState = todoCheckedState.map((item, index) => index === position ? !item : item);\n      setTodoCheckedState(updatedCheckedState);\n    }\n    const params = {\n      ...item,\n      status: item.status === 0 ? 1 : 0\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    };\n    console.log('params', params);\n    fetch(`http://localhost:5000/api/task/update`, requestOptions).then(response => response.json()).then(todoData => {\n      getTasks();\n    });\n  };\n  const handleAddTodoClick = () => {\n    if (newTodo.length === 0) return;\n    const newTodoObj = {\n      content: newTodo,\n      status: 0,\n      description: \"\"\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTodoObj)\n    };\n    fetch('http://localhost:5000/api/task/add', requestOptions).then(response => response.json()).then(todoData => {\n      getTasks();\n      setNewTodo('');\n    });\n  };\n  const handleSearchTodoClick = () => {\n    // if(searchTodo.length === 0) return\n    const requestOptions = {\n      method: 'GET'\n    };\n    fetch(`http://localhost:5000/api/task?content=${searchTodo}`, requestOptions).then(response => response.json()).then(todoData => {\n      setTaskList(todoData.data);\n      setTodoList(todoData.data.filter(item => item.status === 0).sort((a, b) => a.content.localeCompare(b.content)));\n      setDoneList(todoData.data.filter(item => item.status === 1).sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n    });\n  };\n  const handlClick = e => {\n    setNewTodo(e.target.value);\n  };\n  const searchClick = e => {\n    setsearchTodo(e.target.value);\n  };\n  const handleDeleteAll = () => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:5000/api/task/delete', requestOptions).then(response => response.json()).then(todoData => {\n      handleClose();\n      getTasks();\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-box\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 22\n        }, this),\n        onClick: handleClickOpen,\n        className: \"right\",\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Are you sure?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"This will delete all the tasks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteAll,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(BootstrapInput, {\n        value: newTodo,\n        onChange: handlClick,\n        defaultValue: \"Add new Task\",\n        id: \"bootstrap-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddTodoClick,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(BootstrapInput, {\n        value: searchTodo,\n        onChange: searchClick,\n        defaultValue: \"Add new Task\",\n        id: \"bootstrap-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSearchTodoClick,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), todoList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todoCheckedState, /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"`todo-${index}`\",\n          value: \"{item.content}\",\n          checked: todoCheckedState[index],\n          onChange: () => handleCheckboxChange(index, item, 'todo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), item.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), doneList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: doneCheckedState[index],\n          onChange: () => handleCheckboxChange(index, item, 'done')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), item.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"nC0lOKJ62EtTveEKgrE9MgZ/cXw=\", false, function () {\n  return [useStyles];\n});\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Button","makeStyles","DeleteIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputBase","FormControl","Box","Grid","alpha","withStyles","jsxDEV","_jsxDEV","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","borderColor","useStyles","display","flexWrap","margin","TaskList","_s","taskList","setTaskList","todoList","setTodoList","doneList","setDoneList","newTodo","setNewTodo","searchTodo","setsearchTodo","open","setOpen","todoCheckedState","setTodoCheckedState","Array","length","fill","doneCheckedState","setDoneCheckedState","classes","getTasks","fetch","then","response","json","data","filter","item","status","sort","a","b","content","localeCompare","slice","handleCheckboxChange","tag","updatedCheckedState","map","index","params","requestOptions","method","headers","body","JSON","stringify","console","log","todoData","handleAddTodoClick","newTodoObj","description","handleSearchTodoClick","handlClick","e","target","value","searchClick","handleDeleteAll","handleClose","handleClickOpen","children","className","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","flexGrow","container","xs","onClose","id","autoFocus","onChange","defaultValue","type","checked","_id","_c","$RefreshReg$"],"sources":["/Users/yangkaili/Documents/hatch-mongodb/mern-todo/client/src/components/taskBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport {\n  alpha,\n  withStyles,\n} from '@material-ui/core/styles';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function TaskList() {\n  const [taskList, setTaskList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [searchTodo, setsearchTodo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [todoCheckedState, setTodoCheckedState] = useState(\n    new Array(todoList.length).fill(false)\n  );\n  const [doneCheckedState, setDoneCheckedState] = useState(\n    new Array(doneList.length).fill(false)\n  );\n  const classes = useStyles();\n\n  // This method fetches the tasks from the database.\n  useEffect(() => {\n    getTasks()\n  }, []);\n\n  const getTasks = () => {\n    fetch('http://localhost:5000/api/task')\n      .then(response => response.json())\n      .then(data => {\n        if (!data.data || data.data.length === 0) {\n          setTaskList([]);\n          setTodoList([]);\n          setDoneList([]);\n        } else {\n          setTaskList(data.data);\n          setTodoList(data.data.filter(item => item.status === 0).sort((a, b) => a.content.localeCompare(b.content)));\n          setDoneList(data.data.filter(item => item.status === 1).sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n        }\n      });\n  }\n\n  const handleCheckboxChange = (position, item, tag) => {\n    if (tag === 'todo') {\n      const updatedCheckedState = todoCheckedState.map((item, index) =>\n        index === position ? !item : item\n      );\n      setTodoCheckedState(updatedCheckedState);\n    } \n    const params = { ...item, status: item.status === 0 ? 1 : 0 };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(params)\n    };\n    console.log('params', params)\n    fetch(`http://localhost:5000/api/task/update`, requestOptions)\n      .then(response => response.json())\n      .then(todoData => {\n        getTasks();\n      });\n  };\n\n  const handleAddTodoClick = () => {\n    if(newTodo.length === 0) return\n    const newTodoObj = { content: newTodo, status: 0, description: \"\" };\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newTodoObj)\n    };\n    fetch('http://localhost:5000/api/task/add', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        getTasks()\n        setNewTodo('')\n      });\n  }\n  const handleSearchTodoClick = () => {\n    // if(searchTodo.length === 0) return\n    const requestOptions = {\n      method: 'GET',\n    };\n    fetch(`http://localhost:5000/api/task?content=${searchTodo}`, requestOptions)\n      .then(response => response.json()).then(todoData => {\n        setTaskList(todoData.data)\n        setTodoList(todoData.data.filter(item => item.status === 0).sort((a, b) => a.content.localeCompare(b.content)));\n        setDoneList(todoData.data.filter(item => item.status === 1).sort((a, b) => a.content.localeCompare(b.content)).slice(0, 10));\n      });\n  }\n  \n  const handlClick = (e) => {\n    setNewTodo(e.target.value);\n  }\n\n  const searchClick = (e) => {\n    setsearchTodo(e.target.value);\n  }\n\n  const handleDeleteAll = () => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://localhost:5000/api/task/delete', requestOptions)\n      .then(response => response.json()).then(todoData => {\n        handleClose()\n        getTasks()\n      });\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  \n  return (\n    <div>\n      <div className=\"delete-box\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n          onClick={handleClickOpen}\n          className=\"right\"\n        >\n          Delete All\n        </Button>\n      </div>\n      <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          {/* <Item>xs=8</Item> */}\n        </Grid>\n        <Grid item xs={4}>\n          {/* <Item>xs=4</Item> */}\n        </Grid>\n      </Grid>\n    </Box>\n       \n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will delete all the tasks.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleDeleteAll} color=\"primary\" autoFocus>\n            Delete All\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      <div className={classes.margin}>\n        <BootstrapInput value={newTodo} onChange={handlClick} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n        <Button onClick={handleAddTodoClick} variant=\"contained\" color=\"primary\">Create</Button>\n      </div>\n\n      <div className={classes.margin}>\n        <BootstrapInput value={searchTodo} onChange={searchClick} defaultValue=\"Add new Task\" id=\"bootstrap-input\" />\n        <Button onClick={handleSearchTodoClick} variant=\"contained\" color=\"primary\">Search</Button>\n      </div>\n\n\n      <h2>Todo</h2>\n      {todoList.map((item, index) => (\n        <div key={item._id}>\n          {todoCheckedState}\n          <label>\n            <input\n              type=\"checkbox\"\n              id=\"`todo-${index}`\"\n              value=\"{item.content}\"\n              checked={todoCheckedState[index]}\n              onChange={() => handleCheckboxChange(index, item, 'todo')}\n            />\n            {item.content}\n          </label>\n        </div>\n      ))}\n\n      <h2>Done</h2>\n      {doneList.map((item, index) => (\n        <div key={item._id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={doneCheckedState[index]}\n              onChange={() => handleCheckboxChange(index, item, 'done')}\n            />\n            {item.content}\n          </label>\n        </div>\n      ))}\n      \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}